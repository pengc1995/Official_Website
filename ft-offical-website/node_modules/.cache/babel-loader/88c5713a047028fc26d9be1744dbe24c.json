{"ast":null,"code":"var _jsxFileName = \"/Users/chellypeng/workspace/Ft-Official-Website/ft-offical-website/src/modules/delivery/JoinUs/JoinUs.component.jsx\";\nimport React from 'react';\nimport VerificationCode from '../verificationcode/verification/verification.component';\nimport AreaCheckBox from './areacheckbox.component';\nimport ReactValidator from './react-validator';\nimport SuccessModal from '../../home/recruitment/component/successModal/successModal.component';\nimport { Input, Checkbox } from 'antd';\nimport axios from 'axios';\nimport './JoinUs.component.style.css';\nimport GlobalArea from './areadata';\nimport { FormattedMessage } from 'react-intl';\n\nclass JoinUs extends React.Component {\n  constructor() {\n    super(); //1\n\n    this.showModal = () => {\n      if (this.validator.allValid()) {\n        this.setState({\n          modalVisible: true\n        });\n      }\n    };\n\n    this.GetTowns = () => {\n      switch (this.state.Area) {\n        case \"Great Vancouver\":\n          this.setState({\n            Town: this.state.DisplayArea[0]\n          });\n          break;\n\n        case \"Calgary\":\n          this.setState({\n            Town: this.state.DisplayArea[1]\n          });\n          break;\n\n        case \"New York\":\n          this.setState({\n            Town: this.state.DisplayArea[2]\n          });\n          break;\n\n        case \"Toronto\":\n          this.setState({\n            Town: this.state.DisplayArea[3]\n          });\n          break;\n\n        case \"Edmonton\":\n          this.setState({\n            Town: this.state.DisplayArea[4]\n          });\n          break;\n\n        case \"Seattle\":\n          this.setState({\n            Town: this.state.DisplayArea[5]\n          });\n          break;\n\n        case \"Montreal\":\n          this.setState({\n            Town: this.state.DisplayArea[6]\n          });\n          break;\n      }\n    };\n\n    this.handleSelectChange = async event => {\n      //event.target will end up being the input element itself. And we want to pull off the 'name and value'\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.GetTowns();\n      });\n    };\n\n    this.handleSubmit = async event => {\n      if (this.validator.allValid()) {\n        this.props.getformVisibility(false);\n      } else {\n        this.validator.showMessages();\n        this.forceUpdate();\n      }\n\n      event.preventDefault();\n      var data = {\n        Area: this.state.Area,\n        First_Name: this.state.First_Name,\n        Last_Name: this.state.Last_Name,\n        Mobile: this.state.Mobile,\n        Address: this.state.Address,\n        City: this.state.City,\n        PostalCode: this.state.PostalCode,\n        description: this.state.description\n      };\n      var areadata = this.state.DesiredArea = {\n        DriverID: this.state.DriverID,\n        LAN_MARK: 'E',\n        DesiredArea: this.state.DesiredArea\n      };\n      var timedata = this.state.AvailableTime = {\n        DriverID: this.state.DriverID,\n        LAN_MARK: 'E',\n        AvailableTime: this.state.AvailableTime\n      };\n      var transportationdata = this.state.Transportation = {\n        DriverID: this.state.DriverID,\n        LAN_MARK: 'E',\n        Transportation: this.state.Transportation\n      };\n      var filedata = this.state.selectedFile;\n      const formData = new FormData();\n      formData.append('file', filedata);\n      console.log(data);\n      axios({\n        method: 'post',\n        url: 'http://localhost:3000/drivers/add',\n        data: data\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios({\n        method: 'post',\n        url: 'http://localhost:3000/drivers/desiredarea',\n        data: areadata\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios({\n        method: 'post',\n        url: 'http://localhost:3000/drivers/availabletime',\n        data: timedata\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios({\n        method: 'post',\n        url: 'http://localhost:3000/drivers/transportation',\n        data: transportationdata\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios({\n        method: 'post',\n        url: 'http://localhost:3000/uploadfile',\n        data: formData\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.handleChange = async event => {\n      //event.target will end up being the input element itself. And we want to pull off the 'name and value'\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleCheckbox = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n\n      if (!this.state[name].includes(value)) {\n        this.setState({\n          [name]: this.state[name].concat([value])\n        }, () => {\n          /* console.log(this.state.DesiredArea) */\n        }); //语法:this.state[name]\n        // console.log(this.state.DesiredArea)\n      } else {\n        this.setState({\n          [name]: this.state[name].filter(checkbox => checkbox != value)\n        }, () => {\n          /* console.log(this.state.DesiredArea) */\n        });\n      }\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.GetDriverID = this.GetDriverID.bind(this);\n    this.GetTowns = this.GetTowns.bind(this);\n    this.GetAreaStageChange = this.GetAreaStageChange.bind(this);\n    this.handleCheckbox = this.handleCheckbox.bind(this);\n    this.updateflag = this.updateflag.bind(this);\n    this.GetVisibility = this.GetVisibility.bind(this);\n    this.state = {\n      DriverID: 0,\n      Area: 'Great Vancouver',\n      Town: GlobalArea[0],\n      First_Name: '',\n      Last_Name: '',\n      Mobile: '',\n      Address: '',\n      City: '',\n      PostalCode: '',\n      DisplayArea: GlobalArea,\n      AreaCode: 0,\n      DesiredArea: [],\n      Transportation: [],\n      AvailableTime: [],\n      description: 'at least 10 words',\n      code: [],\n      //this variable is used to store the vertification code\n      selectedFile: null,\n      modalVisible: false,\n      formVisible: true,\n      flag: ''\n    };\n  }\n\n  GetDriverID() {\n    var self = this;\n    axios({\n      method: 'get',\n      url: 'http://localhost:3000/driverid'\n    }).then(function (response) {\n      //  var target=JSON.stringify(response.data);\n      //  var ans=JSON.parse(target)[\"MAX(id)\"];\n      var ans = response.data[\"MAX(id)\"];\n      console.log(typeof ans);\n      self.setState({\n        DriverID: ans + 1\n      });\n      return ans;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    var test = this.GetDriverID();\n  }\n\n  componentWillMount() {\n    this.validator = new ReactValidator();\n  }\n\n  GetAreaStageChange(preferredArea) {\n    this.setState({\n      DesiredArea: this.state.DesiredArea.concat(preferredArea)\n    });\n  }\n\n  GetVisibility(visibility) {\n    this.setState({\n      modalVisible: visibility\n    });\n  }\n\n  updateflag(val) {\n    this.setState({\n      flag: val\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          Area = _this$state.Area,\n          First_Name = _this$state.First_Name,\n          Last_Name = _this$state.Last_Name,\n          Address = _this$state.Address,\n          City = _this$state.City,\n          PostalCode = _this$state.PostalCode,\n          Mobile = _this$state.Mobile,\n          description = _this$state.description;\n    return React.createElement(\"div\", {\n      className: \"Form_input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, this.state.formVisible ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"ft_driver_modal_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Become a driver\"), React.createElement(\"hr\", {\n      style: {\n        'padding-bottom': '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })) : null, this.state.formVisible ? React.createElement(\"form\", {\n      className: \"JoinUs\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ft_required_mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      className: \"ft_driver_select\",\n      name: \"Area\",\n      value: Area,\n      onChange: this.handleSelectChange // onClick={()=>{this.handleClick;this.GetDriverID()}}\n      ,\n      style: {\n        width: '242px',\n        background: 'white',\n        margin: '10px 0 35px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Great Vancouver\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"Great Vancouver\"), React.createElement(\"option\", {\n      value: \"Calgary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Calgary\"), React.createElement(\"option\", {\n      value: \"Edmonton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Edmonton\"), React.createElement(\"option\", {\n      value: \"Montreal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Montreal\"), React.createElement(\"option\", {\n      value: \"Toronto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Toronto\"), React.createElement(\"option\", {\n      value: \"Seattle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Seattle\"), React.createElement(\"option\", {\n      value: \"New York\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"New York\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"ft_driver_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ft_required_mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ft_driver_single_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        'width': '242px',\n        margin: '10px 0 0 0'\n      },\n      name: \"First_Name\",\n      value: First_Name,\n      onChange: this.handleChange,\n      size: \"large\",\n      placeholder: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), this.validator.message('First Name', this.state.First_Name, 'required', '', {})), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        'width': '242px',\n        margin: '10px 0 0 0'\n      },\n      name: \"Last_Name\",\n      value: Last_Name,\n      onChange: this.handleChange,\n      size: \"large\",\n      placeholder: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), this.validator.message('Last Name', this.state.Last_Name, 'required', '', {}))), React.createElement(\"div\", {\n      style: {\n        padding: '0 0 35px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"ft_driver_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(\"span\", {\n      className: \"ft_required_mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"*\"), React.createElement(Input, {\n      style: {\n        'max-width': '497px',\n        margin: '10px 0 0 0'\n      },\n      name: \"Mobile\",\n      value: Mobile,\n      onChange: this.handleChange,\n      size: \"large\",\n      placeholder: \"Phone Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), this.validator.message('Mobile', this.state.Mobile, 'required|phone', '', {}), React.createElement(\"div\", {\n      style: {\n        padding: '0 0 35px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"ft_driver_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"span\", {\n      className: \"ft_required_mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"*\"), React.createElement(Input, {\n      style: {\n        'max-width': '497px',\n        margin: '10px 0 0 0'\n      },\n      name: \"Address\",\n      value: Address,\n      onChange: this.handleChange,\n      size: \"large\",\n      placeholder: \"Street Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), this.validator.message('Address', this.state.Address, 'required', '', {}), React.createElement(\"div\", {\n      className: \"ft_driver_single_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        'max-width': '242px',\n        margin: '13px 0 0 0'\n      },\n      name: \"City\",\n      value: City,\n      onChange: this.handleChange,\n      size: \"large\",\n      placeholder: \"City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), this.validator.message('City', this.state.City, 'required', '', {})), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        'max-width': '242px',\n        margin: '13px 0 0 0'\n      },\n      name: \"PostalCode\",\n      value: PostalCode,\n      onChange: this.handleChange,\n      size: \"large\",\n      placeholder: \"ZIP / Postal Code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), this.validator.message('PostalCode', this.state.PostalCode, 'required', '', {}))), React.createElement(\"div\", {\n      style: {\n        padding: '0 0 35px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Desired schedule area\"), React.createElement(\"span\", {\n      className: \"ft_required_mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"span\", {\n      className: \"ft_driver_instruction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Choose at least 1\"), React.createElement(\"div\", {\n      className: \"ft_driver_area_checkbox_group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, this.state.Town.map(data => React.createElement(AreaCheckBox, {\n      name: \"DesiredArea\",\n      locationValue: data,\n      getArea: this.GetAreaStageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        padding: '9.5px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_trans_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ft_required_mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"span\", {\n      className: \"ft_driver_instruction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"Choose at least 1\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ft_driver_transportation_checkbox_group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '200px'\n      },\n      name: \"Transportation\",\n      value: \"Car\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"Car(self-provided)\")), React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '200px'\n      },\n      name: \"Transportation\",\n      value: \"Motorbike\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"Motorbike(self-provided)\")), React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '200px'\n      },\n      name: \"Transportation\",\n      value: \"Electric Motorbike\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"Electric Motorbike(rent)\")))), React.createElement(\"div\", {\n      style: {\n        padding: '9.5px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_hours_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ft_required_mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"span\", {\n      className: \"ft_driver_instruction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, \"Choose at least 4\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ft_driver_hour_checkbox_group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '154px'\n      },\n      name: \"AvailableTime\",\n      value: \"monday_11_5\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_hours_time01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }))), React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '154px'\n      },\n      name: \"AvailableTime\",\n      value: \"tuesday_11_5\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_hours_time02\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }))), React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '154px'\n      },\n      name: \"AvailableTime\",\n      value: \"wednesday_11_5\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_hours_time03\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }))), React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '154px'\n      },\n      name: \"AvailableTime\",\n      value: \"thursday_11_5\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_hours_time04\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }))), React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '154px'\n      },\n      name: \"AvailableTime\",\n      value: \"friday_11_5\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_hours_time05\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }))), React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '154px'\n      },\n      name: \"AvailableTime\",\n      value: \"saturday_11_5\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_hours_time06\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }))), React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '154px'\n      },\n      name: \"AvailableTime\",\n      value: \"sunday_11_5\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_hours_time07\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }))), React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '154px'\n      },\n      name: \"AvailableTime\",\n      value: \"monday_5_11\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_hours_time08\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }))), React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '154px'\n      },\n      name: \"AvailableTime\",\n      value: \"tuesday_5_11\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_hours_time09\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }))), React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '154px'\n      },\n      name: \"AvailableTime\",\n      value: \"wednesday_5_11\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_hours_time10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }))), React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '154px'\n      },\n      name: \"AvailableTime\",\n      value: \"thursday_5_11\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_hours_time11\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }))), React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '154px'\n      },\n      name: \"AvailableTime\",\n      value: \"friday_5_11\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_hours_time12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }))), React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '154px'\n      },\n      name: \"AvailableTime\",\n      value: \"saturday_11_5\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_hours_time13\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }))), React.createElement(Checkbox, {\n      style: {\n        margin: 0,\n        padding: '0 0 16px 0',\n        width: '154px'\n      },\n      name: \"AvailableTime\",\n      value: \"sunday_5_11\",\n      onClick: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_box_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_hours_time14\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        padding: '8px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        'padding-top': '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: \"ft_driver_textarea\",\n      name: \"description\",\n      value: description,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ft_driver_verificode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ft_driver_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_deliver_become_inputcode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ft_required_mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }), React.createElement(VerificationCode, {\n      flagupdate: this.updateflag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }), this.validator.message('Verification code', this.state.flag, 'required', '', {\n      required: 'Please input code correctly.'\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.showModal,\n      className: \"ft_driver_submit_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, \"Submit\"), this.state.modalVisible ? React.createElement(SuccessModal, {\n      getVisibility: this.GetVisibility,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }) : null) : null);\n  }\n\n}\n\nexport default JoinUs;","map":{"version":3,"sources":["/Users/chellypeng/workspace/Ft-Official-Website/ft-offical-website/src/modules/delivery/JoinUs/JoinUs.component.jsx"],"names":["React","VerificationCode","AreaCheckBox","ReactValidator","SuccessModal","Input","Checkbox","axios","GlobalArea","FormattedMessage","JoinUs","Component","constructor","showModal","validator","allValid","setState","modalVisible","GetTowns","state","Area","Town","DisplayArea","handleSelectChange","event","target","value","name","handleSubmit","props","getformVisibility","showMessages","forceUpdate","preventDefault","data","First_Name","Last_Name","Mobile","Address","City","PostalCode","description","areadata","DesiredArea","DriverID","LAN_MARK","timedata","AvailableTime","transportationdata","Transportation","filedata","selectedFile","formData","FormData","append","console","log","method","url","then","response","catch","error","handleChange","handleCheckbox","includes","concat","filter","checkbox","handleCancel","visible","GetDriverID","bind","GetAreaStageChange","updateflag","GetVisibility","AreaCode","code","formVisible","flag","self","ans","componentDidMount","test","componentWillMount","preferredArea","visibility","val","render","width","background","margin","message","padding","map","required"],"mappings":"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","sourcesContent":["import React from 'react';\nimport VerificationCode from '../verificationcode/verification/verification.component';\nimport AreaCheckBox from './areacheckbox.component';\nimport ReactValidator from './react-validator';\nimport SuccessModal from '../../home/recruitment/component/successModal/successModal.component';\nimport { Input, Checkbox } from 'antd';\nimport axios from 'axios';\n\nimport './JoinUs.component.style.css';\n\nimport GlobalArea from './areadata';\nimport { FormattedMessage} from 'react-intl';\n\nclass JoinUs extends React.Component  {\n    constructor(){\n        super();\n        //1\n        this.GetDriverID=this.GetDriverID.bind(this);\n        this.GetTowns=this.GetTowns.bind(this);\n        this.GetAreaStageChange=this.GetAreaStageChange.bind(this);\n        this.handleCheckbox = this.handleCheckbox.bind(this);\n        this.updateflag = this.updateflag.bind(this);\n        this.GetVisibility=this.GetVisibility.bind(this);\n        this.state ={\n            DriverID: 0,\n            Area: 'Great Vancouver',\n            Town:GlobalArea[0],\n            First_Name: '',\n            Last_Name: '',\n            Mobile:'',\n            Address: '',\n            City: '',\n            PostalCode:'',\n            DisplayArea:GlobalArea,\n            AreaCode:0,\n            DesiredArea:[],\n            Transportation:[],\n            AvailableTime:[],\n            description:'at least 10 words',\n            code:[],//this variable is used to store the vertification code\n            selectedFile : null,\n            modalVisible: false,\n            formVisible:true,\n            flag: '',\n        }\n    }\n    showModal = () => {\n        if( this.validator.allValid() ){\n            this.setState({\n                modalVisible: true,\n              });\n        }\n      };\n    \n      GetTowns= ()=> {\n        switch(this.state.Area){\n            case \"Great Vancouver\":\n                this.setState({Town:this.state.DisplayArea[0]});break;\n            case \"Calgary\":\n                this.setState({Town:this.state.DisplayArea[1]});break;\n            case \"New York\":\n                this.setState({Town:this.state.DisplayArea[2]});break;\n            case \"Toronto\":\n                this.setState({Town:this.state.DisplayArea[3]});break;\n            case \"Edmonton\":\n                this.setState({Town:this.state.DisplayArea[4]});break;\n            case \"Seattle\":\n                this.setState({Town:this.state.DisplayArea[5]});break;\n            case \"Montreal\":\n                this.setState({Town:this.state.DisplayArea[6]});break;\n        }\n    }\n\n    handleSelectChange = async event => {\n        //event.target will end up being the input element itself. And we want to pull off the 'name and value'\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState(\n            {[name]: value},\n            ()=>{this.GetTowns()},\n          );\n\n    };\n\n    GetDriverID(){\n        var self=this;\n        axios({\n            method: 'get' ,\n            url: 'http://localhost:3000/driverid' ,\n         })\n         .then(function (response) {\n             //  var target=JSON.stringify(response.data);\n             //  var ans=JSON.parse(target)[\"MAX(id)\"];\n             var ans= response.data[\"MAX(id)\"];\n             console.log(typeof(ans));\n             \n             self.setState({DriverID:ans+1})\n             return ans;\n           })\n         .catch(function (error) {\n             console.log(error);\n           });\n    }\n\n    componentDidMount()\n    {\n      var test= this.GetDriverID();\n    }\n    \n    componentWillMount() {\n        this.validator = new ReactValidator();\n    }\n\n    handleSubmit = async event =>{\n        if( this.validator.allValid() ){\n            this.props.getformVisibility(false)\n        } else {\n            this.validator.showMessages();\n            this.forceUpdate();\n        }\n\n        event.preventDefault();\n        var data = {\n            Area: this.state.Area,\n            First_Name: this.state.First_Name,\n            Last_Name: this.state.Last_Name,\n            Mobile: this.state.Mobile,\n            Address: this.state.Address,\n            City: this.state.City,\n            PostalCode: this.state.PostalCode,\n            description: this.state.description\n        }\n        var areadata = this.state.DesiredArea = {\n            DriverID:this.state.DriverID,\n            LAN_MARK:'E',\n            DesiredArea:this.state.DesiredArea,\n            \n        };\n        var timedata = this.state.AvailableTime = {\n            DriverID:this.state.DriverID,\n            LAN_MARK:'E',\n            AvailableTime:this.state.AvailableTime,\n        };\n        var transportationdata = this.state.Transportation = {\n            DriverID:this.state.DriverID,\n            LAN_MARK:'E',\n            Transportation:this.state.Transportation,\n        };\n        var filedata= this.state.selectedFile;\n        const formData=new FormData();\n        formData.append('file',filedata);\n        console.log(data);\n        axios({\n           method: 'post' ,\n           url: 'http://localhost:3000/drivers/add' ,\n           data: data\n        })\n        .then(function (response) {\n            console.log(response);\n          })\n        .catch(function (error) {\n            console.log(error);\n          });\n        axios({\n            method: 'post',\n            url:'http://localhost:3000/drivers/desiredarea',\n            data: areadata\n        })\n        .then(function (response) {\n            console.log(response);\n          })\n        .catch(function (error) {\n            console.log(error);\n          });\n        axios({\n            method: 'post',\n            url:'http://localhost:3000/drivers/availabletime',\n            data: timedata\n        })\n        .then(function (response) {\n            console.log(response);\n          })\n        .catch(function (error) {\n            console.log(error);\n          });\n        axios({\n            method: 'post',\n            url:'http://localhost:3000/drivers/transportation',\n            data: transportationdata\n        })\n        .then(function (response) {\n            console.log(response);\n          })\n        .catch(function (error) {   \n            console.log(error);\n          });\n        axios({\n            method: 'post' ,\n            url :'http://localhost:3000/uploadfile',\n            data:formData\n        })\n        .then(function(response){\n            console.log(response);\n        })\n        .catch(function(error){\n            console.log(error);\n        })\n        \n    };\n    \n    handleChange = async event => {\n        //event.target will end up being the input element itself. And we want to pull off the 'name and value'\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n          });\n    };\n\n    GetAreaStageChange(preferredArea){\n        this.setState({DesiredArea:this.state.DesiredArea.concat(preferredArea)});\n    }\n    \n    GetVisibility(visibility){\n        this.setState({modalVisible:visibility})\n    }\n\n    handleCheckbox = event => {\n        const{name,value} = event.target;\n        if(!this.state[name].includes(value)){\n            this.setState({[name]:this.state[name].concat([value]) }, ()=>{\n                /* console.log(this.state.DesiredArea) */\n            }) //语法:this.state[name]\n            // console.log(this.state.DesiredArea)\n        }   \n        else{\n            this.setState({[name]:this.state[name].filter(checkbox => (checkbox != value))} , ()=>{\n                /* console.log(this.state.DesiredArea) */\n            })\n\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({ visible: false });\n      };\n\n      updateflag (val) {\n        this.setState({\n            flag: val,\n        })\n    }\n\n    render() {\n        const { Area, First_Name, Last_Name, Address, City, PostalCode, Mobile, description } = this.state;\n        \n        return(\n            <div className='Form_input'>\n                {this.state.formVisible?\n                  <div>\n                    <p className='ft_driver_modal_title'>Become a driver</p>\n                    <hr style={{'padding-bottom':'10px'}}/>\n                  </div>:null}\n             {\n               this.state.formVisible?\n                <form className='JoinUs' onSubmit={this.handleSubmit}>\n\n                    <span className='ft_driver_label'><FormattedMessage id=\"fd_deliver_become_area\"/></span><span className='ft_required_mark'>*</span>\n                    <br/>\n                    <select\n                        className='ft_driver_select'\n                        name='Area'\n                        value={Area}\n                        onChange={this.handleSelectChange}\n                        // onClick={()=>{this.handleClick;this.GetDriverID()}}\n                        style={{width: '242px', \n                                background: 'white',\n                                margin: '10px 0 35px 0'\n                                }}\n                    >\n                        <option value=\"Great Vancouver\">Great Vancouver</option>\n                        <option value=\"Calgary\">Calgary</option>\n                        <option value=\"Edmonton\">Edmonton</option> \n                        <option value=\"Montreal\">Montreal</option>\n                        <option value=\"Toronto\">Toronto</option> \n                        <option value=\"Seattle\">Seattle</option>\n                        <option value=\"New York\">New York</option>\n                    </select>\n\n                    <br />\n\n                    <span className='ft_driver_label'><FormattedMessage id=\"fd_deliver_become_name\"/></span><span className='ft_required_mark'>*</span><br/>\n                    <div className='ft_driver_single_row'>\n                        <div>\n                            <Input style={{'width':'242px', margin: '10px 0 0 0'}} name='First_Name' value={First_Name} onChange={this.handleChange} size='large' placeholder='First Name' />\n                            {this.validator.message('First Name', this.state.First_Name, 'required','',{})} \n                        </div>\n                        <div>\n                            <Input style={{'width':'242px', margin: '10px 0 0 0'}} name='Last_Name' value={Last_Name} onChange={this.handleChange} size='large' placeholder='Last Name' />\n                            {this.validator.message('Last Name', this.state.Last_Name, 'required','',{})}\n                        </div>                    \n                    </div>\n\n                    <div style={{padding: '0 0 35px 0'}} />\n\n                    <span className='ft_driver_label'>Phone</span><span className='ft_required_mark'>*</span>\n                        <Input style={{'max-width':'497px', margin: '10px 0 0 0'}} name='Mobile' value={Mobile} onChange={this.handleChange} size='large' placeholder='Phone Number' />\n                        {this.validator.message('Mobile', this.state.Mobile, 'required|phone','',{})} \n                    <div style={{padding: '0 0 35px 0'}} />\n\n                    <span className='ft_driver_label'>Address</span><span className='ft_required_mark'>*</span>\n                        <Input style={{'max-width':'497px', margin: '10px 0 0 0'}} name='Address' value={Address} onChange={this.handleChange} size='large' placeholder='Street Address' />\n                        {this.validator.message('Address', this.state.Address, 'required','',{})}\n                        <div className='ft_driver_single_row'>\n                            <div>\n                                <Input style={{'max-width':'242px', margin: '13px 0 0 0'}} name='City' value={City} onChange={this.handleChange} size='large' placeholder='City' />\n                               {this.validator.message('City', this.state.City, 'required','',{})}\n                            </div>\n                            <div>\n                                <Input style={{'max-width':'242px', margin: '13px 0 0 0'}} name='PostalCode' value={PostalCode} onChange={this.handleChange} size='large' placeholder='ZIP / Postal Code' />\n                               {this.validator.message('PostalCode', this.state.PostalCode, 'required','',{})}\n                            </div>\n                        </div>\n\n                    <div style={{padding: '0 0 35px 0'}} />\n\n                    <div>\n                        <span className='ft_driver_label'>Desired schedule area</span><span className='ft_required_mark'>*</span>\n                        <span className='ft_driver_instruction'>Choose at least 1</span>\n                        <div className='ft_driver_area_checkbox_group'>\n                            {\n                                this.state.Town.map(data => (\n                                    <AreaCheckBox name='DesiredArea' locationValue={data} getArea={this.GetAreaStageChange} />\n                                ))\n                            }\n                            </div>\n                        {/* {this.validator.message('DesiredArea', this.state.DesiredArea, 'min:1','',{\n                                min: 'Please at least choose 1 desired area',\n                        })}  */}\n                    </div>\n\n                    <div style={{padding:'9.5px 0'}} />\n\n                    <div>\n                        <span className='ft_driver_label'><FormattedMessage id=\"fd_deliver_become_trans_title\"/></span><span className='ft_required_mark'>*</span>\n                        <span className='ft_driver_instruction'>Choose at least 1</span>\n                        <br/>\n                        <div className='ft_driver_transportation_checkbox_group'>\n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'200px'}} name=\"Transportation\" value=\"Car\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'>Car(self-provided)</span>\n                            </Checkbox>\n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'200px'}} name=\"Transportation\" value=\"Motorbike\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'>Motorbike(self-provided)</span>\n                            </Checkbox>\n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'200px'}} name=\"Transportation\" value=\"Electric Motorbike\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'>Electric Motorbike(rent)</span>\n                            </Checkbox>\n                        </div>\n                        {/* {this.validator.message('Transportation', this.state.Transportation, 'min:1','',{\n                                min: 'At least choose 1 transportation method',\n                        })}  */}\n                    </div>\n\n                    <div style={{padding:'9.5px 0'}} />\n\n                    <div>\n                        <span className='ft_driver_label'><FormattedMessage id=\"fd_deliver_become_hours_title\"/></span><span className='ft_required_mark'>*</span>\n                        <span className='ft_driver_instruction'>Choose at least 4</span>\n                        <br/>\n                        <div className='ft_driver_hour_checkbox_group'>   \n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'154px'}} name=\"AvailableTime\" value=\"monday_11_5\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'><FormattedMessage id=\"fd_deliver_become_hours_time01\"/></span>\n                            </Checkbox>\n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'154px'}} name=\"AvailableTime\" value=\"tuesday_11_5\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'><FormattedMessage id=\"fd_deliver_become_hours_time02\"/></span>\n                            </Checkbox>\n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'154px'}} name=\"AvailableTime\" value=\"wednesday_11_5\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'><FormattedMessage id=\"fd_deliver_become_hours_time03\"/></span>\n                            </Checkbox>\n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'154px'}} name=\"AvailableTime\" value=\"thursday_11_5\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'><FormattedMessage id=\"fd_deliver_become_hours_time04\"/></span>\n                            </Checkbox>\n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'154px'}} name=\"AvailableTime\" value=\"friday_11_5\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'><FormattedMessage id=\"fd_deliver_become_hours_time05\"/></span>\n                            </Checkbox>\n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'154px'}} name=\"AvailableTime\" value=\"saturday_11_5\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'><FormattedMessage id=\"fd_deliver_become_hours_time06\"/></span>\n                            </Checkbox>\n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'154px'}} name=\"AvailableTime\" value=\"sunday_11_5\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'><FormattedMessage id=\"fd_deliver_become_hours_time07\"/></span>\n                            </Checkbox>\n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'154px'}} name=\"AvailableTime\" value=\"monday_5_11\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'><FormattedMessage id=\"fd_deliver_become_hours_time08\"/></span>\n                            </Checkbox>\n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'154px'}} name=\"AvailableTime\" value=\"tuesday_5_11\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'><FormattedMessage id=\"fd_deliver_become_hours_time09\"/></span>\n                            </Checkbox>\n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'154px'}} name=\"AvailableTime\" value=\"wednesday_5_11\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'><FormattedMessage id=\"fd_deliver_become_hours_time10\"/></span>\n                            </Checkbox>\n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'154px'}} name=\"AvailableTime\" value=\"thursday_5_11\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'><FormattedMessage id=\"fd_deliver_become_hours_time11\"/></span>\n                            </Checkbox>\n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'154px'}} name=\"AvailableTime\" value=\"friday_5_11\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'><FormattedMessage id=\"fd_deliver_become_hours_time12\"/></span>\n                            </Checkbox>\n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'154px'}} name=\"AvailableTime\" value=\"saturday_11_5\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'><FormattedMessage id=\"fd_deliver_become_hours_time13\"/></span>\n                            </Checkbox>\n                            <Checkbox style={{margin:0, padding:'0 0 16px 0', width:'154px'}} name=\"AvailableTime\" value=\"sunday_5_11\" onClick={this.handleCheckbox}>\n                                <span className='ft_driver_box_label'><FormattedMessage id=\"fd_deliver_become_hours_time14\"/></span>\n                            </Checkbox>\n                        </div>\n                        {/* {this.validator.message('AvailableTime', this.state.AvailableTime, 'min:4','',{\n                                min: 'At least choose 4 operation hours',\n                        })}  */}\n                    </div>\n\n                    <div style={{padding:'8px 0'}} />\n\n                    <div>\n                        <span className='ft_driver_label'><FormattedMessage id=\"fd_deliver_become_desc\"/></span>\n                        <br />\n                        <div style={{'padding-top':'10px'}} />\n                        <textarea className='ft_driver_textarea' name='description' value={description} onChange={this.handleChange}/>\n                    </div>\n\n                    <div className='ft_driver_verificode'>\n                        <span className='ft_driver_label'><FormattedMessage id=\"fd_deliver_become_inputcode\"/></span><span className='ft_required_mark'>*</span><br/>\n                        <VerificationCode flagupdate={this.updateflag} />\n                        {this.validator.message('Verification code', this.state.flag, 'required','',{\n                            required:'Please input code correctly.'\n                        })} \n                    </div>\n                    <hr />\n                    \n                    <button type='submit' onClick={this.showModal} className='ft_driver_submit_button'>Submit</button>\n                    {this.state.modalVisible?<SuccessModal getVisibility={this.GetVisibility}/>:null}       \n                </form>:null\n                }\n            </div>\n        );\n    }\n}\nexport default JoinUs;"]},"metadata":{},"sourceType":"module"}